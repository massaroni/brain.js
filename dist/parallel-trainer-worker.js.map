{"version":3,"sources":["../src/parallel-trainer-worker.js"],"names":["brainjs","require","default","module","exports","job","callback","net","netType","fromJSON","netJSON","status","train","trainingData","trainOpts","trainedNetJSON","toJSON","e","toString"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,EAAmBC,OAAnC;;AAEAC,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACxC,MAAI;AACF,QAAMC,MAAM,IAAIP,QAAQK,IAAIG,OAAZ,CAAJ,EAAZ;AACAD,QAAIE,QAAJ,CAAaJ,IAAIK,OAAjB;AACA,QAAMC,SAASJ,IAAIK,KAAJ,CAAUP,IAAIQ,YAAd,EAA4BR,IAAIS,SAAhC,CAAf;AACA,QAAMC,iBAAiBR,IAAIS,MAAJ,EAAvB;AACAV,aAAS,IAAT,EAAe,EAACK,cAAD,EAASI,8BAAT,EAAf;AACD,GAND,CAME,OAAOE,CAAP,EAAU;AACVX,aAASW,EAAEC,QAAF,EAAT;AACD;AACF,CAVD","file":"parallel-trainer-worker.js","sourcesContent":["const brainjs = require('./index').default;\n\nmodule.exports = function (job, callback) {\n  try {\n    const net = new brainjs[job.netType]();\n    net.fromJSON(job.netJSON);\n    const status = net.train(job.trainingData, job.trainOpts);\n    const trainedNetJSON = net.toJSON();\n    callback(null, {status, trainedNetJSON});\n  } catch (e) {\n    callback(e.toString());\n  }\n}"]}